name: CI
on: [push, pull_request]

env:
  SEQ_DB: sequelize_test
  SEQ_USER: sequelize_test
  SEQ_PW: sequelize_test

jobs:
  test-sqlite:
    strategy:
      fail-fast: false
      matrix:
        use-ts: [true, '']
    name: SQLite${{ matrix.use-ts && ' (TS)' || '' }}
    runs-on: ubuntu-latest
    env:
      DIALECT: sqlite
      USE_TS: ${{ matrix.use-ts }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: /bin/bash ./setup/prepare-ci.sh
      - name: Execute SSCCE${{ matrix.use-ts && ' (TS)' || '' }}
        run: npm run ci
  test-postgres:
    strategy:
      fail-fast: false
      matrix:
        postgres-version: [9.5, 10] # Does not work with 12
        native: [true, false]
        use-ts: [true, '']
    name: Postgres ${{ matrix.postgres-version }}${{ matrix.native && ' (native)' || '' }}${{ matrix.use-ts && ' (TS)' || '' }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: sushantdhiman/postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: sequelize_test
          POSTGRES_DB: sequelize_test
          POSTGRES_PASSWORD: sequelize_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DIALECT: ${{ matrix.native && 'postgres-native' || 'postgres' }}
      USE_TS: ${{ matrix.use-ts }}
    steps:
      - run: PGPASSWORD=sequelize_test psql -h localhost -p 5432 -U sequelize_test sequelize_test -c '\l'
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: /bin/bash ./setup/prepare-ci.sh
      - name: Execute SSCCE${{ matrix.use-ts && ' (TS)' || '' }}
        run: npm run ci
  test-mysql-mariadb:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: MySQL 5.7
            image: mysql:5.7
            dialect: mysql
            use-ts: ''
          - name: MySQL 5.7
            image: mysql:5.7
            dialect: mysql
            use-ts: true
          - name: MariaDB 10.3
            image: mariadb:10.3
            dialect: mariadb
            use-ts: ''
          - name: MariaDB 10.3
            image: mariadb:10.3
            dialect: mariadb
            use-ts: true
    name: ${{ matrix.name }}${{ matrix.use-ts && ' (TS)' || '' }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: ${{ matrix.image }}
        env:
          MYSQL_DATABASE: sequelize_test
          MYSQL_USER: sequelize_test
          MYSQL_PASSWORD: sequelize_test
          MYSQL_ROOT_PASSWORD: sequelize_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin -usequelize_test -psequelize_test status" --health-interval 10s --health-timeout 5s --health-retries 5 --tmpfs /var/lib/mysql:rw
    env:
      DIALECT: ${{ matrix.dialect }}
      USE_TS: ${{ matrix.use-ts }}
    steps:
      - run: mysql --host 127.0.0.1 --port 3306 -uroot -psequelize_test -e "GRANT ALL ON *.* TO 'sequelize_test'@'%' with grant option; FLUSH PRIVILEGES;"
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: /bin/bash ./setup/prepare-ci.sh
      - name: Execute SSCCE${{ matrix.use-ts && ' (TS)' || '' }}
        run: npm run ci
  test-mssql:
    strategy:
      fail-fast: false
      matrix:
        mssql-version: [2017, 2019]
        use-ts: [true, '']
    name: MSSQL ${{ matrix.mssql-version }}${{ matrix.use-ts && ' (TS)' || '' }}
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:${{ matrix.mssql-version }}-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password12!
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "Password12!" -l 30 -Q \"SELECT 1\" || exit 1"
          --health-start-period 10s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    env:
      DIALECT: mssql
      USE_TS: ${{ matrix.use-ts }}
    steps:
      - run: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "Password12!" -Q "CREATE DATABASE sequelize_test; ALTER DATABASE sequelize_test SET READ_COMMITTED_SNAPSHOT ON;"
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: /bin/bash ./setup/prepare-ci.sh
      - name: Execute SSCCE${{ matrix.use-ts && ' (TS)' || '' }}
        run: npm run ci
